PatientICN = rep(1:num_patients, times = num_PHQ9_obs),
SurveyName = rep(c("PHQ9", "OtherSurvey1", "OtherSurvey2"), num_PHQ9_obs),
SurveyGivenDateTime = mapply(function(icn, obs) {
sample(seq(as.Date("2020-01-01"), as.Date("2023-01-01"), by = "day"), obs, replace = TRUE)
}, 1:num_patients, num_PHQ9_obs),
RawScore = sample(0:27, sum(num_PHQ9_obs), replace = TRUE),
BirthDate = sample(seq(as.Date("1950-01-01"), as.Date("2005-01-01"), by = "day"), num_patients, replace = TRUE)
)
library(gt)
# Create a data frame with the mean age values
mean_age_data <- data.frame(
DEPRESSION_STAGE = c("No depression", "Mild", "Moderate", "Moderately Severe", "Severe"),
Stage_1 = c(68, 34, NA, NA, NA),
Stage_2 = c(21, 24, NA, NA, NA),
Stage_3A = c(33, 35, NA, NA, NA),
Stage_3B = c(76, 56, NA, NA, NA),
Stage_4 = c(90, 80, NA, NA, NA)
)
# Create the gt table
gt(mean_age_data) %>%
tab_header(title = "Mean Age by CKD Stage and Depression Stage") %>%
cols_label(DEPRESSION_STAGE = "Depression Stage") %>%
fmt_number(columns = vars(Stage_1:Stage_4), decimals = 0) %>%
tab_spanner(label = "CKD STAGE", columns = vars(Stage_1:Stage_4))
cd .ssh
cd ~/.ssh
# Load necessary library
library(tibble)
# Set seed for reproducibility
set.seed(42)
# Generate example data
n_patients <- 1000
patients <- data.frame(
PatientICN = rep(1:n_patients, each = 7),
SurveyName = rep(sample(c("PHQ9", "PHQ-2", "PHQ-2+I9"), n_patients, replace = TRUE), each = 7),
RawScore = ifelse(rep(sample(c("PHQ9", "PHQ-2", "PHQ-2+I9"), n_patients, replace = TRUE), each = 7) == "PHQ9",
sample(0:27, n_patients * 7, replace = TRUE),
sample(0:6, n_patients * 7, replace = TRUE)),
CurrentAge = rep(sample(18:80, n_patients, replace = TRUE), each = 7),
IndexAge = rep(sample(18:80, n_patients, replace = TRUE), each = 7),
SurveyGivenDateTime = rep(seq(as.Date("2022-01-01"), by = "day", length.out = 7), n_patients),
Gender = rep(sample(c("Male", "Female"), n_patients, replace = TRUE), each = 7),
Race = rep(sample(c("White", "Black or African American", "Asian",
"American Indian or Alaska Native", "Native Hawaiian or Other Pacific Islander", "Unknown"),
n_patients, replace = TRUE), each = 7),
Ethnicity = rep(sample(c("Hispanic or Latino", "Not Hispanic or Latino", "Unknown"),
n_patients, replace = TRUE), each = 7),
Alcohol = sample(0:1, n_patients * 7, replace = TRUE),
Cancer = sample(0:1, n_patients * 7, replace = TRUE),
Diabetes = sample(0:1, n_patients * 7, replace = TRUE),
Obesity = sample(0:1, n_patients * 7, replace = TRUE),
NumeGFR = rep(sample(1:10, n_patients, replace = TRUE), each = 7),
Egfr.epi = sample(50:150, n_patients * 7, replace = TRUE)
)
# Convert to tibble for better printing
patients_tibble <- as_tibble(patients)
# Print first few rows of the dataset
head(patients_tibble)
# Convert to tibble for better printing
data <- as_tibble(patients)
# Print first few rows of the dataset
head(data)
table(data$PatientICN)
table(data$SurveyName)
table(data$RawScore)
table(data$CurrentAge)
table(data$IndexAge)
table(data$SurveyGivenDateTime)
table(data$Gender)
table(data$Ethnicity)
table(data$Race)
table(data$Alcohol)
table(data$Cancer)
table(data$Diabetes)
table(data$Obesity)
table(data$NumeGFR)
table(data$Egfr.epi)
#Name the variables for the table
var_label(data) <- list(
SurveyName = "Survey Name",
RawScore = "Raw Score",
Gender = "Gender",
Race = "Patient Race",
Ethnicity = "Patient Ethnicity",
IndexAge = "Age at Index Date",
CurrentAge = "Current Age",
NumeGFR = "Number of eGFRs",
Egfr.epi = "eGFR Score",
Alcohol = "Alcohol Abuse",
Cancer = "Cancer",
Diabetes = "Diabetes",
Obesity = "Obesity",
SurveyGivenDateTime = "Date of Depression Survey"
)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
library("dplyr")
library("ggplot2")
library("tidyr")
library("viridis")
install.packages("viridis")
library("viridis")
library("table1")
library("labelled")
library("gtsummary")
library("car")
library("ggpubr")
install.packages("ggpubr")
library("ggpubr")
library(tibble)
#Name the variables for the table
var_label(data) <- list(
SurveyName = "Survey Name",
RawScore = "Raw Score",
Gender = "Gender",
Race = "Patient Race",
Ethnicity = "Patient Ethnicity",
IndexAge = "Age at Index Date",
CurrentAge = "Current Age",
NumeGFR = "Number of eGFRs",
Egfr.epi = "eGFR Score",
Alcohol = "Alcohol Abuse",
Cancer = "Cancer",
Diabetes = "Diabetes",
Obesity = "Obesity",
SurveyGivenDateTime = "Date of Depression Survey"
)
#Create a table one of the demographics
table1(~ RawScore + Gender + Race + Ethnicity + IndexAge + CurrentAge + NumeGFR + Egfr.epi + Alcohol + Cancer + Diabetes + Obesity | factor(SurveyName), data=data, caption = "Table 1: Descriptive Statistics of Demographic Data by Survey Type", render.missing = NULL)
#| fig.align = "center",
#| out.width = "600px"
#alcohol abuse by survey type
ggplot(data, aes(SurveyName, fill = factor(Alcohol))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Alcohol for Each Survey Name") + scale_fill_manual(values = c('0' = 'blue', '1' = 'red'), name = 'Alcohol') + theme_minimal()
#cancer by survey type
ggplot(data, aes(SurveyName, fill = factor(Cancer))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Cancer for Each Survey Name") + scale_fill_manual(values = c('0' = 'blue', '1' = 'red'), name = 'Cancer') + theme_minimal()
#diabetes by survey type
ggplot(data, aes(SurveyName, fill = factor(Diabetes))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Diabetes for Each Survey Name") + scale_fill_manual(values = c('0' = 'blue', '1' = 'red'), name = 'Diabetes') + theme_minimal()
#obesity by survey type
ggplot(data, aes(SurveyName, fill = factor(Obesity))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Obesity for Each Survey Name") + scale_fill_manual(values = c('0' = 'blue', '1' = 'red'), name = 'Obesity') + theme_minimal()
#| fig.align = "center",
#| out.width = "600px"
#alcohol abuse by survey type
ggplot(data, aes(SurveyName, fill = factor(Alcohol))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Alcohol for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Alcohol') + theme_minimal()
#cancer by survey type
ggplot(data, aes(SurveyName, fill = factor(Cancer))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Cancer for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Cancer') + theme_minimal()
#diabetes by survey type
ggplot(data, aes(SurveyName, fill = factor(Diabetes))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Diabetes for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Diabetes') + theme_minimal()
#obesity by survey type
ggplot(data, aes(SurveyName, fill = factor(Obesity))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Obesity for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Obesity') + theme_minimal()
#| fig.align = "center",
#| out.width = "600px"
#alcohol abuse by survey type
ggplot(data, aes(SurveyName, fill = factor(Alcohol))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Alcohol for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Alcohol', labels = c("no", "yes")) + theme_minimal()
#cancer by survey type
ggplot(data, aes(SurveyName, fill = factor(Cancer))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Cancer for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Cancer', labels = c("No", "Yes")) + theme_minimal()
#diabetes by survey type
ggplot(data, aes(SurveyName, fill = factor(Diabetes))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Diabetes for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Diabetes', labels = c("No", "Yes")) + theme_minimal()
#obesity by survey type
ggplot(data, aes(SurveyName, fill = factor(Obesity))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Obesity for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Obesity', labels = c("No", "Yes")) + theme_minimal()
saveRDS(
data,
file = here::here("output/data.rds")
)
#! TO DO:
#!   add call to here::i_am
here::i_am("code/00_make_dataset.R")
#! TO DO:
#!   add call to here::i_am
here::i_am("code/00_make_dataset.R")
#! TO DO:
#!   add call to here::i_am
here::i_am("code/01_make_output1.R")
#| fig.align = "center",
#| out.width = "600px"
#alcohol abuse by survey type
plot1 <- ggplot(data, aes(SurveyName, fill = factor(Alcohol))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Alcohol for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Alcohol', labels = c("No", "Yes")) + theme_minimal()
#cancer by survey type
plot2 <- ggplot(data, aes(SurveyName, fill = factor(Cancer))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Cancer for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Cancer', labels = c("No", "Yes")) + theme_minimal()
#diabetes by survey type
plot3 <- ggplot(data, aes(SurveyName, fill = factor(Diabetes))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Diabetes for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Diabetes', labels = c("No", "Yes")) + theme_minimal()
#obesity by survey type
plot4 <- ggplot(data, aes(SurveyName, fill = factor(Obesity))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Obesity for Each Survey Name") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Obesity', labels = c("No", "Yes")) + theme_minimal()
combined_figure <- ggarrange(plot1, plot2, plot3, plot4, labels = c("A", "B", "C", "D"), ncol = 2, nrow = 2)
combined_figure1
combined_figure
#| fig.align = "center",
#| out.width = "600px"
#alcohol abuse by survey type
plot1 <- ggplot(data, aes(SurveyName, fill = factor(Alcohol))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Alcohol") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Alcohol', labels = c("No", "Yes")) + theme_minimal()
#cancer by survey type
plot2 <- ggplot(data, aes(SurveyName, fill = factor(Cancer))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Cancer") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Cancer', labels = c("No", "Yes")) + theme_minimal()
#diabetes by survey type
plot3 <- ggplot(data, aes(SurveyName, fill = factor(Diabetes))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Diabetes") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Diabetes', labels = c("No", "Yes")) + theme_minimal()
#obesity by survey type
plot4 <- ggplot(data, aes(SurveyName, fill = factor(Obesity))) + geom_bar(position = 'dodge') + labs(x = "Survey Name", y = "Count", title = "Counts of Obesity") + scale_fill_manual(values = c('0' = 'lightpink', '1' = 'lightgreen'), name = 'Obesity', labels = c("No", "Yes")) + theme_minimal()
combined_figure <- ggarrange(plot1, plot2, plot3, plot4, labels = c("A", "B", "C", "D"), ncol = 2, nrow = 2)
combined_figure
#! TO DO:
#!   add call to here::i_am
library(here)
here::i_am("code/00_make_dataset.R")
here::i_am()
pwd
f75 <- read.csv("/Users/alexandraklimek/Desktop/Rollins Spring 24/DATA_550/Midterm Project/f75_interim.csv")
head(f75)
# Load the table1 package
library(table1)
# Assuming your dataset is named 'f75'
# Select relevant variables
f75_subset <- f75[, c("sex", "agemons", "muac", "weight", "height", "oedema", "milkfeed", "days_stable", "discharged2")]
# Define the measurement timing for each variable
measurement_timing <- c(
"sex" = "Baseline",
"agemons" = "Baseline",
"muac" = "Baseline",
"weight" = "Baseline",
"height" = "Baseline",
"oedema" = "Baseline",
"milkfeed" = "Baseline",
"days_stable" = "Stabilization",
"discharged2" = "Discharge/Death/Withdraw"
)
# Create a Table1 object
tab1 <- CreateTableOne(vars = names(f75_subset),
strata = "measurement_timing",
data = f75_subset,
test = FALSE)
?CreateTableOne(
?CreateTableOne
??CreateTableOne
# Install and load the summarytools package
# install.packages("summarytools")
library(summarytools)
# Install and load the summarytools package
install.packages("summarytools")
library(summarytools)
# Install and load the summarytools package
install.packages("summarytools")
library(summarytools)
tab1 <- table1(~ sex + agemons + muac + weight + height + oedema + milkfeed + measurement_timing | measurement_timing, data = f75_subset)
tab1 <- table1(~ sex + agemons + muac + weight + height + oedema + milkfeed | measurement_timing, data = f75_subset)
tab1
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody Resistance",
shield_glycans = "Shield Glycans",
region = "Region",
env_length = "Length of Env Protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
# Load required packages
library(gtsummary)
# Rename variables for each measurement timing
f75_renamed <- f75 %>%
rename(muac_baseline = muac, weight_baseline = weight, oedema_baseline = oedema,
muac_stabilization = muac1, weight_stabilization = weight1, oedema_stabilization = oedema1,
muac_discharge = muac2, weight_discharge = weight2, oedema_discharge = oedema2)
# Create summary table
table <- f75_renamed %>%
select(muac_baseline, weight_baseline, oedema_baseline,
muac_stabilization, weight_stabilization, oedema_stabilization,
muac_discharge, weight_discharge, oedema_discharge) %>%
tbl_summary(by = measurement_timing, statistic = everything() ~ "{mean} ({sd})")
# Print the table
table
# Create summary table
table <- f75_renamed %>%
select(muac_baseline, weight_baseline, oedema_baseline,
muac_stabilization, weight_stabilization, oedema_stabilization,
muac_discharge, weight_discharge, oedema_discharge) %>%
tbl_summary(by = measurement_timing, statistic = everything() ~ "{mean} ({sd})")
# Load required packages
library(dplyr)
library(tidyr)
library(gtsummary)
# Reshape the data to long format
f75_long <- f75 %>%
pivot_longer(cols = starts_with("muac") | starts_with("weight") | starts_with("oedema"),
names_to = c(".value", "measurement_timing"),
names_sep = "_") %>%
mutate(measurement_timing = factor(measurement_timing, levels = c("baseline", "stabilization", "discharge")))
# Create summary table
table <- f75_long %>%
select(-id) %>%
tbl_summary(by = measurement_timing, statistic = everything() ~ "{mean} ({sd})")
# Create summary table
table <- f75_long %>%
select(-subjid) %>%
tbl_summary(by = measurement_timing, statistic = everything() ~ "{mean} ({sd})")
# Create summary table
table <- f75_long %>%
select(-subjid) %>%
tbl_summary(by = measurement_timing, statistic = everything() ~ "{mean} ({sd})")
f75_long
# Assuming your dataset is named 'f75'
# Select relevant variables
f75_subset <- f75[, c("muac", "weight", "oedema", "muac1", "weight1", "oedema1", "muac2", "weight2", "oedema2")]
# Define the measurement timing for each variable
measurement_timing <- c(
"muac" = "Baseline",
"weight" = "Baseline",
"oedema" = "Baseline",
"muac1" = "Stabilization",
"weight1" = "Stabilization",
"oedema1" = "Stabilization",
"muac2" = "Discharge/Death/Widthdraw",
"weight2" = "Discharge/Death/Widthdraw",
"oedema2" = "Discharge/Death/Widthdraw"
)
tab1 <- table1(~ muac + weight + oedema + muac1 + weight1 + oedema1 + muac2 + weight2 + oedema2 | measurement_timing, data = f75_subset)
tab1
# Load required packages
library(dplyr)
library(gtsummary)
# Create a new column for measurement timing based on variable names
f75_timing <- f75 %>%
mutate(measurement_timing = case_when(
grepl("^muac$", names(.)) ~ "Baseline",
grepl("^muac1$", names(.)) ~ "Stabilization",
grepl("^muac2$", names(.)) ~ "Discharge/Death/Withdraw",
grepl("^weight$", names(.)) ~ "Baseline",
grepl("^weight1$", names(.)) ~ "Stabilization",
grepl("^weight2$", names(.)) ~ "Discharge/Death/Withdraw",
grepl("^oedema$", names(.)) ~ "Baseline",
grepl("^oedema1$", names(.)) ~ "Stabilization",
grepl("^oedema2$", names(.)) ~ "Discharge/Death/Withdraw",
TRUE ~ NA_character_
))
head(f75)
# Load required packages
library(dplyr)
library(gtsummary)
# Create a new column for measurement timing based on variable names
f75_timing <- f75 %>%
mutate(measurement_timing = case_when(
grepl("^muac$", names(.)) ~ "Baseline",
grepl("^muac1$", names(.)) ~ "Stabilization",
grepl("^muac2$", names(.)) ~ "Discharge/Death/Withdraw",
grepl("^weight$", names(.)) ~ "Baseline",
grepl("^weight1$", names(.)) ~ "Stabilization",
grepl("^weight2$", names(.)) ~ "Discharge/Death/Withdraw",
grepl("^oedema$", names(.)) ~ "Baseline",
grepl("^oedema1$", names(.)) ~ "Stabilization",
grepl("^oedema2$", names(.)) ~ "Discharge/Death/Withdraw",
TRUE ~ NA_character_
))
# Reshape the data to long format
f75_long <- f75 %>%
pivot_longer(cols = starts_with("muac") | starts_with("weight") | starts_with("oedema"),
names_to = c(".value", "measurement_timing"),
names_sep = "\\d") %>%
mutate(measurement_timing = case_when(
is.na(muac) ~ "Discharge/Death/Withdraw",
grepl("^1$", measurement_timing) ~ "Stabilization",
TRUE ~ "Baseline"
)) %>%
select(-ends_with("1"), -ends_with("2"))  # Remove the temporary columns
# Create summary table
table <- f75_long %>%
group_by(measurement_timing, name) %>%
summarise(mean = mean(value), n_percent = sum(value == "+++") / n(), .groups = "drop") %>%
pivot_wider(names_from = measurement_timing, values_from = c(mean, n_percent)) %>%
rename(`Baseline` = mean_Baseline, `Stabilization` = mean_Stabilization, `Discharge/Death/Withdraw` = mean_Discharge/Death/Withdraw) %>%
gtsummary::gt() %>%
gtsummary::modify_spanning_header(
columns = where(is_spanner),
labels = c("**Baseline**" = 1, "**Stabilization**" = 2, "**Discharge/Death/Withdraw**" = 3)
)
# Reshape the data to long format
f75_long <- f75 %>%
pivot_longer(cols = starts_with("muac") | starts_with("weight") | starts_with("oedema"),
names_to = c(".value", "measurement_timing"),
names_sep = "\\d") %>%
mutate(measurement_timing = case_when(
is.na(muac) ~ "Discharge/Death/Withdraw",
grepl("^1$", measurement_timing) ~ "Stabilization",
TRUE ~ "Baseline"
)) %>%
select(-ends_with("1"), -ends_with("2"))  # Remove the temporary columns
# Create summary table
table <- f75_long %>%
group_by(measurement_timing, name) %>%
summarise(mean = mean(value), n_percent = sum(value == "+++") / n(), .groups = "drop") %>%
pivot_wider(names_from = measurement_timing, values_from = c(mean, n_percent)) %>%
rename(`Baseline` = mean_Baseline, `Stabilization` = mean_Stabilization, `Discharge/Death/Withdraw` = mean_Discharge_Death_Withdraw)
f75_long
# Create summary table
table <- f75_long %>%
group_by(measurement_timing) %>%
summarise(mean = mean(value), n_percent = sum(value == "+++") / n(), .groups = "drop") %>%
pivot_wider(names_from = measurement_timing, values_from = c(mean, n_percent)) %>%
rename(`Baseline` = mean_Baseline, `Stabilization` = mean_Stabilization, `Discharge/Death/Withdraw` = mean_Discharge_Death_Withdraw)
table1(~ sex + agemons + muac + weight + height + oedema + milkfeed, data = f75)
table1(~ sex + agemons + muac + weight + height + oedema + milkfeed, data = f75)
table1(~ sex + agemons + muac + weight + height + oedema + milkfeed | arm, data = f75)
# Rename variables based on descriptions
f75_renamed <- f75 %>%
rename(
`Study Site` = site,
`Age in months` = agemons,
`Sex` = sex,
`Main care giver to the child` = caregiver,
`Child Still Breastfeeding` = bfeeding,
`Shock requiring fluid` = shock,
`Impaired consciousness` = iconsciousness,
`Severe Pneumonia` = sev_pneumonia,
`Diarrhoea` = diarrhoea,
`Malaria` = malaria,
`Other Febrile Illness` = ofillness,
`Known TB (being treated)` = tb,
`Chronic cough >| month` = chronic_cough,
`Known Sickle Cell Disease` = sickle_cell,
`Known congenital or acquired heart disease` = heart_disease,
`Known cerebral palsy or severe developmental delay` = cerebral_palsy,
`HIV antibody test` = hiv_results,
`Kwashiorkor` = kwash
)
table1(~ sex + agemons + muac + weight + height + oedema + milkfeed | arm, data = f75_renamed)
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` | arm, data = f75_renamed)
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed)
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, title = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, title = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, title = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, main = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, caption = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, caption = "__Table 1: Summary of Demographic Factors by Intervention__")
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, caption = __"Table 1: Summary of Demographic Factors by Intervention"__)
table1(~ `Study Site` + `Age in months` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, caption = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `Age in months` + `Study Site` + `Sex` + `Main care giver to the child` + `Child Still Breastfeeding` + `Shock requiring fluid` + `Impaired consciousness` + `Severe Pneumonia` + `Diarrhoea` + `Malaria` + `Other Febrile Illness` + `Known TB (being treated)` + `Chronic cough >| month` + `Known Sickle Cell Disease` + `Known congenital or acquired heart disease` + `Known cerebral palsy or severe developmental delay` + `HIV antibody test` + `Kwashiorkor`| arm, data = f75_renamed, caption = "Table 1: Summary of Demographic Factors by Intervention")
table1(~ `MUAC in cms at Baseline` + `MUAC in cms at Stabilization` + `MUAC in cms at Death/Discharge/Withdrawal` + `Weight in Kgs at Baseline` + `Weight in Kgs at Stabilization` + `Weight in Kgs at Death/Discharge/Withdrawal` + `Oedema at Baseline` + `Oedema at Stabilitization` + `Oedema at Death/Discharge/Withdrawal`| arm, data = f75_renamed, caption = "Table 1: Summary of Demographic Factors by Intervention")
# Rename variables based on descriptions
f75_renamed <- f75 %>%
rename(
`MUAC in cms at Baseline` = muac,
`MUAC in cms at Stabilization` = muac1,
`MUAC in cms at Death/Discharge/Withdrawal` = muac2,
`Weight in Kgs at Baseline` = weight,
`Weight in Kgs at Stabilization` = weight1,
`Weight in Kgs at Death/Discharge/Withdrawal` = weight2,
`Oedema at Baseline` = oedema,
`Oedema at Stabilitization` = oedema1,
`Oedema at Death/Discharge/Withdrawal` = oedema2
)
table1(~ `MUAC in cms at Baseline` + `MUAC in cms at Stabilization` + `MUAC in cms at Death/Discharge/Withdrawal` + `Weight in Kgs at Baseline` + `Weight in Kgs at Stabilization` + `Weight in Kgs at Death/Discharge/Withdrawal` + `Oedema at Baseline` + `Oedema at Stabilitization` + `Oedema at Death/Discharge/Withdrawal`| arm, data = f75_renamed, caption = "Table 1: Summary of Demographic Factors by Intervention")
table_one <- readRDS("~/Desktop/Rollins Spring 24/DATA_550/data550_group5/alex/output/table_one.rds")
library("labelled")
library("table1")
#Name the variables for the table
var_label(data) <- list(
site = "Study Site",
agemons = "Age in months",
sex = "Sex",
caregiver = "Main care giver to the child",
bfeeding = "Child Still Breastfeeding",
shock = "Shock requiring fluid",
iconsciousness = "Impaired consciousness",
sev_pneumonia = "Severe Pneumonia",
diarrhoea = "Diarrhoea",
malaria = "Malaria",
ofillness = "Other Febrile Illness",
tb = "Known TB (being treated)",
chronic_cough = "Chronic cough >| month",
sickle_cell = "Known Sickle Cell Disease",
heart_disease = "Known congenital or acquired heart disease",
cerebral_palsy = "Known cerebral palsy or severe developmental delay",
hiv_results = "HIV antibody test",
kwash = "Kwashiorkor"
)
#Name the variables for the table
var_label(f75) <- list(
site = "Study Site",
agemons = "Age in months",
sex = "Sex",
caregiver = "Main care giver to the child",
bfeeding = "Child Still Breastfeeding",
shock = "Shock requiring fluid",
iconsciousness = "Impaired consciousness",
sev_pneumonia = "Severe Pneumonia",
diarrhoea = "Diarrhoea",
malaria = "Malaria",
ofillness = "Other Febrile Illness",
tb = "Known TB (being treated)",
chronic_cough = "Chronic cough >| month",
sickle_cell = "Known Sickle Cell Disease",
heart_disease = "Known congenital or acquired heart disease",
cerebral_palsy = "Known cerebral palsy or severe developmental delay",
hiv_results = "HIV antibody test",
kwash = "Kwashiorkor"
)
#Create a table one of the demographics
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=f75, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
table_one
install.packages(c("dplyr", "ggplot2", "knitr", "here"))
install.packages(c("dplyr", "ggplot2", "knitr", "here"))
install.packages("renv")
renv::init()
renv::init()
getwd()
setwd("/Users/alexandraklimek/Desktop/Rollins Spring 24/DATA_550/Final Project")
getwd()
renv::init()
